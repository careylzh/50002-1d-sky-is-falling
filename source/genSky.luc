module genSky ( //to generate sky positioned at the first row
    input clk,  // clock
    input rst,  // reset
    output sky[5]
  ) {
  //sig sky1_[4];
  //sig sky2_[4];
  .clk(clk){ .rst(rst) {

      dff seed [32];                   // seed for each run
    }
    pn_gen skynum;                     // pseudo-random number generator
  }
  //bin_to_dec bin_to_dec(#DIGITS(2));
  
  always {
    skynum.seed = seed.q;              // use seed.q as the seed
    skynum.next = 1;                   // don't generate new numbers
    skynum.rst = rst;                  // connect rst by default
    sky =b00000;
    seed.d = seed.q + 1;
   
               //first 5 bit as the starting position of the first sky    
    
    //bin_to_dec.value = sky1;
    //sky1_ = bin_to_dec.digits[0];
    sky = skynum.num[4:0];
   
    /**if (sky1>5){
      sky[0][sky1:sky1-5]=5b11111;
      sky[1][sky1:sky1-5]=5b11111;
    }else{
      sky[0][sky1:0]=5b11111;
      sky[1][sky1:0]=5b11111;
      }
    
    if (sky2>5){
      sky[0][sky2:sky2-5]=5b11111;
      sky[1][sky2:sky2-5]=5b11111;
    }else{
      sky[0][sky2:0]=5b11111;
      sky[1][sky2:0]=5b11111;
      }*/
    
    
  }
}
