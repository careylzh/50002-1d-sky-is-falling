/*
   This file was generated automatically by Alchitry Labs version 1.1.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module genSky_13 (
    input clk,
    input rst,
    output reg [7:0] sky
  );
  
  
  
  reg [2:0] sky1;
  
  reg [2:0] sky2;
  
  reg [31:0] M_seed_d, M_seed_q = 1'h0;
  wire [32-1:0] M_skynum_num;
  reg [1-1:0] M_skynum_rst;
  reg [1-1:0] M_skynum_next;
  reg [32-1:0] M_skynum_seed;
  pn_gen_18 skynum (
    .clk(clk),
    .rst(M_skynum_rst),
    .next(M_skynum_next),
    .seed(M_skynum_seed),
    .num(M_skynum_num)
  );
  
  always @* begin
    M_skynum_seed = M_seed_q;
    M_skynum_next = 1'h0;
    M_skynum_rst = rst;
    sky = 8'h00;
    sky1 = M_skynum_num[0+2-:3];
    sky2 = M_skynum_num[3+2-:3];
    sky[(sky1)*8+7-:8] = 1'h1;
    sky[(sky2)*8+7-:8] = 1'h1;
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_seed_q <= 1'h0;
    end else begin
      M_seed_q <= M_seed_d;
    end
  end
  
endmodule
